-- 05_insert_operations_data.sql
-- Скрипт для имитации операционной деятельности: заказы, поступления, списания

BEGIN;

-- Предполагаем, что ID из предыдущего скрипта (04_insert_initial_data.sql) нам известны
-- или мы их получаем через SELECT. Для простоты здесь будем использовать предполагаемые ID.

-- Сотрудники ID: 1-Иванов(Шеф), 2-Петрова(Повар), 3-Сидоров(Повар), 4-Кузнецова(Кассир-Админ), 5-Михайлов(Курьер)
-- Кассы ID: 1-K01-MAIN, 2-K02-TAKEAWAY
-- Блюда ID: 1-Филадельфия, 2-Калифорния, 4-Суши Лосось, 8-Морс
-- Склады ID: 1-Основной, 2-Холодильный
-- Продукты ID: 1-Лосось, 2-Рис
-- Причины списания ID: 1-Порча, 2-Истек срок, 5-Проработка

-- 1. Создание Заказов

-- Заказ 1 (общая сумма будет рассчитана приложением или триггером, здесь ставим примерную)
INSERT INTO "Заказ" ("ID_кассы", "ID_сотрудника_оформившего", "Тип_оплаты", "Общая_сумма", "Дата_создания") VALUES
(1, 4, 'Карта', 1080.00, NOW() - INTERVAL '2 hours'); -- Кассир Кузнецова, 2 часа назад

-- Позиции для Заказа 1 (ID_заказа = 1, если это первый заказ после очистки)
INSERT INTO "ПозицияЗаказа" ("ID_заказа", "ID_блюда", "Количество", "Цена_на_момент_заказа") VALUES
( (SELECT MAX("ID_заказа") FROM "Заказ"), 1, 1, 480.00), -- Филадельфия
( (SELECT MAX("ID_заказа") FROM "Заказ"), 2, 1, 420.00), -- Калифорния
( (SELECT MAX("ID_заказа") FROM "Заказ"), 8, 1, 150.00); -- Морс

-- Заказ 2
INSERT INTO "Заказ" ("ID_кассы", "ID_сотрудника_оформившего", "Тип_оплаты", "Общая_сумма", "Дата_создания") VALUES
(2, 4, 'Наличные', 290.00, NOW() - INTERVAL '1 hour'); -- Кассир Кузнецова, 1 час назад

-- Позиции для Заказа 2 (ID_заказа = 2)
INSERT INTO "ПозицияЗаказа" ("ID_заказа", "ID_блюда", "Количество", "Цена_на_момент_заказа") VALUES
( (SELECT MAX("ID_заказа") FROM "Заказ"), 4, 1, 130.00), -- Суши Лосось
( (SELECT MAX("ID_заказа") FROM "Заказ"), 8, 1, 150.00); -- Морс


-- 2. Оформление Поступлений

-- Поступление 1
INSERT INTO "Поступление" ("ID_склада", "ID_сотрудника_принявшего", "Номер_накладной", "Дата_поступления") VALUES
(2, 1, 'Накл-Пост-001', NOW() - INTERVAL '1 day'); -- На Холодильный склад, принял Шеф Иванов

-- Позиции для Поступления 1 (ID_поступления = 1)
INSERT INTO "ПозицияПоступления" ("ID_поступления", "ID_продукта", "Количество", "Цена_закупки") VALUES
( (SELECT MAX("ID_поступления") FROM "Поступление"), 1, 3.000, 2800.00), -- Лосось (3кг по 2800 за кг)
( (SELECT MAX("ID_поступления") FROM "Поступление"), 3, 5.000, 750.00);  -- Сыр (5кг по 750 за кг)

-- Поступление 2
INSERT INTO "Поступление" ("ID_склада", "ID_сотрудника_принявшего", "Номер_накладной", "Дата_поступления") VALUES
(1, 2, 'Накл-Пост-002', NOW() - INTERVAL '10 hours'); -- На Основной склад, приняла Повар Петрова

-- Позиции для Поступления 2 (ID_поступления = 2)
INSERT INTO "ПозицияПоступления" ("ID_поступления", "ID_продукта", "Количество", "Цена_закупки") VALUES
( (SELECT MAX("ID_поступления") FROM "Поступление"), 2, 10.000, 180.00), -- Рис (10кг по 180 за кг)
( (SELECT MAX("ID_поступления") FROM "Поступление"), 4, 1.000, 900.00);   -- Нори (1 упаковка за 900)


-- 3. Списания (с использованием функций)

-- Списание продукта (например, порча лосося)
-- Используем функцию создать_списание_продукта(p_id_склада, p_id_сотрудника, p_id_причины, p_комментарий, p_id_продукта, p_количество)
SELECT создать_списание_продукта(
    2, -- ID_склада (Холодильный)
    1, -- ID_сотрудника_ответственного (Шеф Иванов)
    1, -- ID_причины_списания (Порча продукта)
    'Обнаружена порча части партии лосося при вскрытии',
    1, -- ID_продукта (Лосось)
    0.500 -- Количество (0.5 кг)
);

-- Списание блюда (например, для проработки нового меню)
-- Используем функцию создать_списание_блюда(p_id_склада, p_id_сотрудника, p_id_причины, p_комментарий, p_id_блюда, p_количество)
SELECT создать_списание_блюда(
    1, -- ID_склада (списание с основного, т.к. там кухня)
    1, -- ID_сотрудника_ответственного (Шеф Иванов)
    5, -- ID_причины_списания (Проработка нового меню)
    'Приготовлен образец ролла "Новый Дракон" для дегустации',
    3, -- ID_блюда (Ролл Канада, используем его как "прототип" для нового)
    1  -- Количество (1 шт)
);

-- Еще одно списание продукта (истек срок годности авокадо)
-- Продукты ID: 6 - Авокадо
-- Склады ID: 2 - Холодильный
-- Сотрудники ID: 2 - Повар Петрова
-- Причины списания ID: 2 - Истек срок годности
SELECT создать_списание_продукта(
    2, -- ID_склада
    2, -- ID_сотрудника_ответственного
    2, -- ID_причины_списания
    'Авокадо, не использованное вовремя, истек срок',
    6, -- ID_продукта (Авокадо)
    0.800 -- Количество (0.8 кг)
);

-- 4. Пример смены
-- Сотрудники ID: 2-Петрова(Повар), 4-Кузнецова(Кассир-Админ)
-- Склады ID: 1-Основной (для повара, если привязка к кухне)
INSERT INTO "Смена" ("ID_сотрудника", "ID_склада", "Дата_смены", "Время_начала", "Время_окончания") VALUES
(2, 1, CURRENT_DATE, '09:00:00', '18:00:00'),
(4, NULL, CURRENT_DATE, '10:00:00', '22:00:00'), -- Кассир не привязан к складу
(3, 1, CURRENT_DATE - INTERVAL '1 day', '14:00:00', '23:00:00'); -- Сидоров вчера работал

COMMIT;